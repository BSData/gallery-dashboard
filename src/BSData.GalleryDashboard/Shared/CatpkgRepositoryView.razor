@inject GalleryBrowserState state
@inject GalleryHttpClient httpClient

@if (repositoryInfo is { } catpkg)
{
    <CatpkgSummaryCard Catpkg=catpkg />

    <h4>Files:</h4>
    <div class="flex flex-col space-y-2 py-2">
        @foreach (var file in catpkg.RepositoryFiles)
        {
            <CatpkgFileCard RepositoryFile=file />
        }
    </div>
}
else
{
    <span>
        Repo @CatpkgReference?.Name not found.
    </span>
}

@code {
    [Parameter]
    public RepositoryReference? CatpkgReference { get; init; }

    CatpkgRepositoryInfo? repositoryInfo;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (CatpkgReference is { } reference && state.Cache[reference.Gallery] is { } galleryCache)
        {
            if (galleryCache.RepositoryInfoCache.TryGetValue(reference, out var repoCache))
            {
                repositoryInfo = repoCache;
            }
            else
            {
                repositoryInfo = state.Cache[reference.Gallery]?.InfoCache?.Repositories.Find(x => x.Name == reference.Name);
                repositoryInfo = await state.Cache.GetHydratedCatpkgAsync(httpClient, reference);
            }
        }
    }
}
