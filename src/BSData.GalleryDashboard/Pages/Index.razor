@page "/"

@inject NavigationManager nav

<PageTitle>BSData Gallery</PageTitle>

<div>
    <FluentBreadcrumb>
        <FluentBreadcrumbItem Href="@UriWithQuery(null, null)">Browse</FluentBreadcrumbItem>
        @if (Repository is { } repoName)
        {
            <FluentBreadcrumbItem Href="@UriWithQuery(Gallery, null)">
                @Gallery
            </FluentBreadcrumbItem>
            <FluentBreadcrumbItem>@repoName</FluentBreadcrumbItem>
        }
        else
        {
            <FluentBreadcrumbItem>@Gallery</FluentBreadcrumbItem>
        }
    </FluentBreadcrumb>
</div>

<div>
    <GalleryBrowserView @bind-Gallery=GalleryValue @bind-Repository=RepositoryValue />
</div>

@code {
    [Parameter, SupplyParameterFromQuery(Name = "gallery")]
    public string? Gallery { get; set; }

    [Parameter, SupplyParameterFromQuery(Name = "repo")]
    public string? Repository { get; set; }

    public string? GalleryValue
    {
        get => Gallery;
        set
        {
            Gallery = value;
            UpdateQuery();
        }
    }

    public string? RepositoryValue
    {
        get => Repository;
        set
        {
            Repository = value;
            UpdateQuery();
        }
    }

    void UpdateQuery()
    {
        nav.NavigateTo(UriWithQuery(Gallery, Repository));
    }

    string UriWithQuery(string? gallery, string? repository)
    {
        return nav.GetUriWithQueryParameters(new Dictionary<string, object?>
        {
            ["gallery"] = gallery,
            ["repo"] = repository,
        });
    }
}